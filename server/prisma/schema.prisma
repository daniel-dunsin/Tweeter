generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id         String   @id @default(uuid())
  email      String   @unique
  userName   String?
  password   String?
  isVerified Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([email])
  @@map("auths")
}

model User {
  id               String        @id @default(uuid())
  email            String        @unique
  name             String
  userName         String?
  dateOfBirth      String
  profilePicture   String        @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1H81w4SmKH5DZmIbxU7EB0aMSkNQDoPQA1mRQxf2Y0wMF1NSa7vghbwwKASi1q4NPmNw&usqp=CAU")
  profilePictureId String?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  jwtToken         JwtToken?
  interests        SubCategory[]

  @@index([email, userName])
  @@map("users")
}

enum TokenTypes {
  accountVerificationToken
  passwordResetToken
}

model Token {
  id        String     @id @unique @default(uuid())
  code      String
  type      TokenTypes
  email     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([email])
  @@map("tokens")
}

model JwtToken {
  id          String   @id @default(uuid())
  user        User?    @relation(references: [id], fields: [userId])
  userId      String   @unique
  accessToken String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("jwt_tokens")
}

model Category {
  id            String        @id @default(uuid())
  name          String
  description   String?
  subCategories SubCategory[]

  @@map("categories")
}

model SubCategory {
  id          String    @id @default(uuid())
  name        String
  description String?
  categoryId  String
  category    Category? @relation(references: [id], fields: [categoryId])
  users       User[]

  @@map("subcategories")
}
